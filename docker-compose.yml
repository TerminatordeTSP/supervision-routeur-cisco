services:
  router_django:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile
    container_name: router_django
    ports:
      - "8080:8080"
    environment:
      - DATABASE=postgres
      - SQL_HOST=db
      - SQL_PORT=5432
      - SQL_USER=${POSTGRES_USER:-user}
      - SQL_PASSWORD=${POSTGRES_PASSWORD:-password}
      - SQL_DATABASE=${POSTGRES_DB:-routerdb}
      - DJANGO_SETTINGS_MODULE=router_supervisor.prod_settings
      - DEBUG=True
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_ADMIN_TOKEN}
      - INFLUXDB_ORG=${INFLUXDB_ORG:-telecom-sudparis}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET:-router-metrics}
    volumes:
      - static_volume:/code/static
      - media_volume:/code/media
      - ./telegraf/sample_metrics:/tmp/metrics:rw
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    command : /start 

  caddy:
    image: caddy:2
    container_name: caddy
    ports:
      - "${CADDY_PORT:-8080}:80"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - static_volume:/srv/static
      - media_volume:/srv/media
    depends_on:
      - router_django

  db:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-routerdb}
    volumes:
      - pgdata:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@telecom-sudparis.eu
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db

  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    ports:
      - "${INFLUXDB_PORT:-8086}:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin123456
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG:-telecom-sudparis}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET:-router-metrics}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN}
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_config:/etc/influxdb2
    healthcheck:
      test: ["CMD", "influx", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  pipeline:
    build:
      context: .
      dockerfile: Dockerfile.pipeline
    container_name: pipeline
    environment:
      - MIBS=
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - ./telegraf/processors.conf:/etc/telegraf.d/processors.conf:ro
      - ./telegraf/sample_metrics:/tmp/metrics:rw
    depends_on:
      - influxdb
    working_dir: /code

  telegraf:
    image: telegraf:1.35        # ← l’image officielle
    container_name: telegraf
    restart: always
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - ./telegraf:/etc/telegraf.d
      - ./telegraf/sample_metrics:/tmp/metrics:rw
    depends_on:
      - router_django
      - influxdb
    ports:
      - "${TELEGRAF_PORT:-57500}:57500"
    environment:
      - HOST_PROC=/host/proc
      - HOST_SYS=/host/sys
      - HOST_ETC=/host/etc

volumes:
  pgdata:
  pgadmin_data:
  static_volume:
  media_volume:
  influxdb_data:
  influxdb_config: