"""
Django settings for router_supervisor project.

Generated by 'django-admin startproject' using Django 4.2.17.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-3l=v_=7u#wzn2qdd9lc60h0&q!9vx97gki1vm+v@s2i#k5dr_v'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1', '[::1]']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'router_supervisor.core_models.apps.CoreModelsConfig',
    'router_supervisor.settings_app',
    'router_supervisor.dashboard_app',
    'router_supervisor.thresholds_app',
    'router_supervisor.alerts_app.apps.AlertsAppConfig',
    'router_supervisor.api_app',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'router_supervisor.src.middleware.DatabaseErrorMiddleware',  # Custom database error handling
]

ROOT_URLCONF = 'src.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'router_supervisor.src.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

APPEND_SLASH = True

# Configuration de base de données adaptative
# Utilise PostgreSQL si les variables d'environnement sont présentes, sinon SQLite
DATABASE_URL = os.environ.get('DATABASE_URL')
if DATABASE_URL or os.environ.get('SQL_HOST'):
    # Configuration PostgreSQL (production et développement Docker)
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.environ.get('SQL_DATABASE', 'routerdb'),
            'USER': os.environ.get('SQL_USER', 'user'),
            'PASSWORD': os.environ.get('SQL_PASSWORD', 'password'),
            'HOST': os.environ.get('SQL_HOST', 'localhost'),
            'PORT': os.environ.get('SQL_PORT', '5432'),
        }
    }
else:
    # Configuration SQLite (développement local)
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }



# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 4,
        }
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'router_supervisor/dashboard_app/static'),
    os.path.join(BASE_DIR, 'router_supervisor/settings_app/static'),
    os.path.join(BASE_DIR, 'router_supervisor/thresholds_app/static'),
]
STATIC_ROOT = os.path.join(BASE_DIR, '../static')
LOGIN_URL = '/login/'
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuration des pages d'erreur personnalisées
# Ces handlers ne fonctionnent qu'en mode DEBUG=False
handler404 = 'router_supervisor.src.error_views.custom_404_view'
#handler500 = 'router_supervisor.src.error_views.custom_500_view'
handler403 = 'router_supervisor.src.error_views.custom_403_view'

LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/'     # Où aller après login
LOGOUT_REDIRECT_URL = '/login/' # Où aller après logout


AUTH_USER_MODEL = 'core_models.User'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'z.imt.fr'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'ryan.zerhouni@telecom-sudparis.eu'
EMAIL_HOST_PASSWORD = 'Azertyuiop007**'
DEFAULT_FROM_EMAIL = 'alerts@telecom-sudparis.eu'
DEFAULT_FROM_EMAIL = 'admin@telecom-sudparis.eu'