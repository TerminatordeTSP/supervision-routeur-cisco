# ─────────────────────────────────────────────────────────────────────────────
# AGENT
# ─────────────────────────────────────────────────────────────────────────────
[agent]
  interval = "15s"        # Augmenter l'intervalle pour éviter les timeouts
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "2s"  # Ajouter du jitter pour éviter les pics
  flush_interval = "15s"
  flush_jitter = "2s"
  precision = ""
  hostname = "router-collector"
  omit_hostname = false
  debug = true             # Activer le debug pour plus de logs

# ─────────────────────────────────────────────────────────────────────────────
# INPUT PLUGINS
# ─────────────────────────────────────────────────────────────────────────────

# Suppression des métriques système inutiles (CPU, MEM, SYSTEM)
# Ces métriques concernent le conteneur Docker, pas le routeur

[[inputs.ping]]
  urls = ["172.16.10.41"]  # Adresse IP du routeur
  count = 3
  ping_interval = 1.0
  timeout = 10.0
  deadline = 10
  
# Commande ping pour récupérer la latence moyenne
[[inputs.exec]]
  commands = ["/bin/bash -c \"ping -c 3 -W 10 172.16.10.41 | grep 'round-trip' | awk -F'/' '{print $5}'\""]
  data_format = "value"
  data_type = "float"
  name_override = "ping_latency"
  interval = "15s"
  timeout = "15s"

[[inputs.snmp]]
  agents     = ["udp://172.16.10.41:161"]  # Adresse IP du routeur
  version    = 2
  community  = "public"
  timeout    = "20s"
  retries    = 3
  max_repetitions = 10

  [[inputs.snmp.field]]
    name   = "hostname"
    oid    = "1.3.6.1.2.1.1.5.0"
    is_tag = true

  [[inputs.snmp.field]]
    name = "uptime"
    oid  = "1.3.6.1.2.1.1.3.0"

  [[inputs.snmp.field]]
    name = "cpu_5min"
    oid  = "1.3.6.1.4.1.9.2.1.58.0"

  [[inputs.snmp.field]]
    name = "cpu_0_usage"
    oid  = "1.3.6.1.4.1.9.9.109.1.1.1.1.8.7"

  [[inputs.snmp.field]]
    name = "cpu_0_index"
    oid  = "1.3.6.1.4.1.9.9.109.1.1.1.1.2.7"

  [[inputs.snmp.field]]
    name = "ram_used"
    oid  = "1.3.6.1.4.1.9.9.48.1.1.1.5.1"

  [[inputs.snmp.field]]
    name = "ram_free"
    oid  = "1.3.6.1.4.1.9.9.48.1.1.1.6.1"

  [[inputs.snmp.table]]
    name = "interfaces"
    name_override = "interfaces"
    inherit_tags = ["hostname"]

    [[inputs.snmp.table.field]]
      name   = "ifDescr"
      oid    = "1.3.6.1.2.1.2.2.1.2"
      is_tag = true

    [[inputs.snmp.table.field]]
      name = "ifInOctets"
      oid  = "1.3.6.1.2.1.2.2.1.10"

    [[inputs.snmp.table.field]]
      name = "ifOutOctets"
      oid  = "1.3.6.1.2.1.2.2.1.16"

    [[inputs.snmp.table.field]]
      name = "ifInErrors"
      oid  = "1.3.6.1.2.1.2.2.1.14"

    [[inputs.snmp.table.field]]
      name = "ifOutErrors"
      oid  = "1.3.6.1.2.1.2.2.1.20"

# ─────────────────────────────────────────────────────────────────────────────
# OUTPUT PLUGINS
# ─────────────────────────────────────────────────────────────────────────────

[[outputs.influxdb_v2]]
  urls         = ["http://influxdb:8086"]
  token        = "BQSixul3bdmN-KtFDG_BPfUgSDGc1ZIntJ-QYa2fiIQjA_2psFN2z21AOmxD2s8fpStGlj8YWyvTCckOeCrFJA=="
  organization = "telecom-sudparis"
  bucket       = "router-metrics"

[[outputs.file]]
  files       = ["stdout"]
  data_format = "influx"
