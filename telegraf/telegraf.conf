# ─────────────────────────────────────────────────────────────────────────────
# GLOBAL AGENT CONFIGURATION
# ─────────────────────────────────────────────────────────────────────────────
[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = ""
  omit_hostname = false
  debug = true

# ─────────────────────────────────────────────────────────────────────────────
# INPUTS
# ─────────────────────────────────────────────────────────────────────────────

# Input: CPU local de la VM
[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = true

# Input: RAM locale de la VM
[[inputs.mem]]

# Input: Informations système locales
[[inputs.system]]

# Input: Ping vers Google DNS pour latence réseau
[[inputs.exec]]
  commands = ["/bin/bash -c \"ping -c 3 8.8.8.8 | grep 'rtt' | cut -d '=' -f2 | cut -d '/' -f2\""]
  data_format = "value"
  data_type = "float"
  name_override = "ping_latency"
  interval = "10s"

# Input: Générateur de métriques simulées (debug/dev uniquement)
[[inputs.exec]]
  commands = [
    "echo '[{\"router_name\":\"router1\",\"timestamp\":\"'$(date +%s)'\",\"router_metrics\":{\"cpu_usage\":45,\"memory_usage\":78,\"traffic_mbps\":120,\"interfaces\":[{\"name\":\"GigabitEthernet0/0\",\"status\":\"up\",\"bandwidth\":1000,\"input_rate\":450,\"output_rate\":380,\"errors\":0}]}}]'"
  ]
  interval = "10s"
  timeout = "5s"
  data_format = "json"
  json_name_key = "router_name"
  tag_keys = ["router_name"]
  json_string_fields = ["router_metrics"]
  name_override = "simulated_router"

# Input: SNMP – Routeur Cisco
[[inputs.snmp]]
  agents = ["udp://172.16.10.41:161"]
  version = 2
  community = "public"
  timeout = "5s"
  retries = 3

  # Champs individuels
  [[inputs.snmp.field]]
    name = "hostname"
    oid = "1.3.6.1.2.1.1.5.0"
    is_tag = true

  [[inputs.snmp.field]]
    name = "cpu_5min"
    oid = "1.3.6.1.4.1.9.2.1.58.0"

  [[inputs.snmp.field]]
    name = "ram_used"
    oid = "1.3.6.1.4.1.9.9.48.1.1.1.5.1"

  [[inputs.snmp.field]]
    name = "ram_free"
    oid = "1.3.6.1.4.1.9.9.48.1.1.1.6.1"

  [[inputs.snmp.field]]
    name = "uptime"
    oid = "1.3.6.1.2.1.1.3.0"

  [[inputs.snmp.field]]
    name = "sysDescr"
    oid = "1.3.6.1.2.1.1.1.0"

  [[inputs.snmp.field]]
    name = "cpu_0_usage"
    oid = "1.3.6.1.4.1.9.9.109.1.1.1.1.8.7"

  [[inputs.snmp.field]]
    name = "cpu_0_index"
    oid = "1.3.6.1.4.1.9.9.109.1.1.1.1.2.7"

  # Table des interfaces réseau
  [[inputs.snmp.table]]
    name = "interfaces"
    oid = "1.3.6.1.2.1.2.2"
    inherit_tags = ["hostname"]

    [[inputs.snmp.table.field]]
      name = "ifDescr"
      oid = "1.3.6.1.2.1.2.2.1.2"
      is_tag = true

    [[inputs.snmp.table.field]]
      name = "ifInUcastPkts"
      oid = "1.3.6.1.2.1.2.2.1.11"

    [[inputs.snmp.table.field]]
      name = "ifOutUcastPkts"
      oid = "1.3.6.1.2.1.2.2.1.17"

  # Table physique : entités matérielles (CPU, interfaces, etc.)
  [[inputs.snmp.table]]
    name = "ent_physical"
    oid = "1.3.6.1.2.1.47.1.1.1"
    inherit_tags = ["hostname"]

    [[inputs.snmp.table.field]]
      name = "entPhysicalDescr"
      oid = "1.3.6.1.2.1.47.1.1.1.1.2"

# ─────────────────────────────────────────────────────────────────────────────
# OUTPUTS
# ─────────────────────────────────────────────────────────────────────────────

# Output vers API Django
[[outputs.http]]
  url = "http://host.docker.internal:8000/api/metrics/"
  method = "POST"
  data_format = "json"
  timeout = "5s"
  insecure_skip_verify = true

  [outputs.http.headers]
    Content-Type = "application/json"

# Output console en influx pour debug CLI
[[outputs.file]]
  files = ["stdout"]
  data_format = "influx"
  namepass = ["cpu", "mem", "system", "exec"]

# Output console en JSON pour test `--test`
[[outputs.file]]
  files = ["stdout"]
  data_format = "json"
