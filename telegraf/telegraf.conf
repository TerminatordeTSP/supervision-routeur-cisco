# Global Agent Configuration
[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = ""
  omit_hostname = false

# Configuration for Cisco gRPC telemetry input
[[inputs.cisco_telemetry_mdt]]
  transport = "grpc"
  service_address = ":57500"
  
  # Authentification si nécessaire
  # username = "admin"
  # password = "cisco"
  
  # Configuration TLS si nécessaire
  # tls_cert = "/etc/telegraf/cert.pem"
  # tls_key = "/etc/telegraf/key.pem"

# HTTP Output pour Django
[[outputs.http]]
  url = "http://host.docker.internal:8000/api/metrics/"
  method = "POST"
  data_format = "json"
  timeout = "5s"
  insecure_skip_verify = true
  
  # Important: Utiliser le format de données attendu par l'API
  [outputs.http.data_format_config]
    json_array = true     # Envoyer comme tableau JSON
    
  [outputs.http.headers]
    Content-Type = "application/json"
    # Authorization si nécessaire
    # Authorization = "Bearer your-token-here"
    
  # Activer les logs détaillés pour le débogage
  [outputs.http.log]
    enable = true
    level = "debug"

# Sortie de débogage dans la console
[[outputs.file]]
  files = ["stdout"]
  data_format = "influx"
  namepass = ["cpu", "mem", "system", "exec"]

# Sortie dans un fichier pour déboguer
[[outputs.file]]
  files = ["stdout"]
  data_format = "json"

# Input pour la surveillance CPU
[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false

# Input pour la surveillance mémoire
[[inputs.mem]]

# Input pour les métriques système
[[inputs.system]]

# Input pour simuler des données
[[inputs.exec]]
  commands = [
    "echo '[{\"router_name\":\"router1\",\"timestamp\":\"'$(date +%s)'\",\"router_metrics\":{\"cpu_usage\":45,\"memory_usage\":78,\"traffic_mbps\":120,\"interfaces\":[{\"name\":\"GigabitEthernet0/0\",\"status\":\"up\",\"bandwidth\":1000,\"input_rate\":450,\"output_rate\":380,\"errors\":0}]}}]'"
  ]
  interval = "10s"
  timeout = "5s"
  data_format = "json"
  json_name_key = "router_name"
  tag_keys = ["router_name"]
  json_string_fields = ["router_metrics"]